def extended_gcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        gcd, x, y = extended_gcd(b % a, a)
        return (gcd, y - (b // a) * x, x)

def modular_inverse(k, p):
    gcd, x, y = extended_gcd(k, p)
    if gcd != 1:
        raise ValueError(f"{k} không có phần tử nghịch đảo trên modulo {p}")
    else:
        return x % p

def main():
    k = int(input("Nhập giá trị của K: "))
    p = int(input("Nhập giá trị của P (số nguyên tố): "))

    try:
        inverse = modular_inverse(k, p)
        print(f"Phần tử nghịch đảo của {k} trên modulo {p} là {inverse}")
    except ValueError as e:
        print(e)

if __name__ == "__main__":
    main()